name: CI Pipeline

on:
  pull_request:
    branches:
      - develop

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: tqs-test/backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('tqs-test/backend/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Build with Maven
        run: mvn clean install -DskipTests

      - name: Run Unit Tests + Generate Coverage
        run: mvn test jacoco:report

      - name: Run Cucumber Tests (Selenium)
        run: echo "placeholder for running Cucumber tests with Selenium"

      - name: Upload JaCoCo Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: tqs-test/backend/target/site/jacoco/

      # Placeholder for security testing with OWASP ZAP
      - name: (Optional) Run OWASP ZAP Scan
        run: echo "plcaceholder for running OWASP ZAP scan"

      - name: Extract coverage from JaCoCo report
        id: coverage
        run: |
          COVERAGE=$(grep -oPm1 "(?<=<counter type=\"INSTRUCTION\" missed=\")\d+" tqs-test/backend/target/site/jacoco/jacoco.xml)
          COVERAGE_TOTAL=$(grep -oPm1 "(?<=<counter type=\"INSTRUCTION\" covered=\")\d+" tqs-test/backend/target/site/jacoco/jacoco.xml)
          COVERAGE_PERCENT=$(( 100 * COVERAGE_TOTAL / (COVERAGE + COVERAGE_TOTAL) ))
          echo "coverage=$COVERAGE_PERCENT" >> $GITHUB_OUTPUT

      - name: Comment on PR with code coverage
        if: github.event_name == 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr comment ${{ github.event.pull_request.number }} --body "üîç Code coverage: **${{ steps.coverage.outputs.coverage }}%**"
